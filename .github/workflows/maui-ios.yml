name: NellsPay iOS
on:
  workflow_call:
    inputs:
      dotnet-version:
        required: true
        type: string
      dotnet-version-target:
        required: true
        type: string
      xcode-version:
        required: true
        type: string
      project-file:
        required: true
        type: string
      project-folder:
        required: true
        type: string
      package-name:
        required: true
        type: string
      build-config:
        required: true
        type: string
      build-version:
        required: true
        type: string
    secrets:
      p12-cert:
        required: true
      p12-cert-password:
        required: true
      appstore-issuer:
        required: true
      appstore-keyid:
        required: true
      appstore-private-key:
        required: true
      provisioning-profile:
        required: false
      keychain-password:
        required: false

jobs:
  build-ios:
    runs-on: macos-15
    name: iOS Publish
    environment: dev

    steps:
      - uses: maxim-lobanov/setup-xcode@v1
        name: Set XCode version
        with:
          xcode-version: ${{ inputs.xcode-version }}

      - name: Setup .NET ${{ inputs.dotnet-version }}
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ inputs.dotnet-version }}

      - uses: actions/checkout@v3
        name: Checkout repository
        with:
          path: ${{ inputs.project-folder }}

      - run: |
          echo "PWD=$(pwd)"
          ls -R | head -50

      - name: Install MAUI Workload
        run: dotnet workload install maui --ignore-failed-sources

      - name: Restore Dependencies
        run: dotnet restore ${{ inputs.project-file }}

      - name: Cleanup stale temp keychain
        run: security delete-keychain signing_temp.keychain || true

      - name: Import cert
        id: certs
        uses: apple-actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.p12-cert }}
          p12-password: ${{ secrets.p12-cert-password }}

      - name: Read version from csproj
        id: version
        shell: pwsh
        run: |
          [xml]$csproj = Get-Content "${{ inputs.project-file }}"
          $display = $csproj.Project.PropertyGroup.ApplicationDisplayVersion
          $build = $csproj.Project.PropertyGroup.ApplicationVersion
          echo "display=$display" >> $env:GITHUB_OUTPUT
          echo "build=$build" >> $env:GITHUB_OUTPUT

      - name: Version info
        run: |
          echo "Display Version: ${{ steps.version.outputs.display }}"
          echo "Build Version:   ${{ steps.version.outputs.build }}"

      - name: Download Provisioning Profiles
        uses: Apple-Actions/download-provisioning-profiles@v1
        with: 
          bundle-id: ${{ inputs.package-name }}
          issuer-id: ${{ secrets.appstore-issuer }}
          api-key-id: ${{ secrets.appstore-keyid }}
          api-private-key: ${{ secrets.appstore-private-key }}

      - name: Generate the iOS app (signed)
        run: |
          dotnet publish "${{ inputs.project-file }}" \
            -c "${{ inputs.build-config }}" \
            -f "${{ inputs.dotnet-version-target }}-ios" \
            -p:ArchiveOnBuild=true \
            -p:EnableAssemblyILStripping=false \
            -p:RuntimeIdentifier=ios-arm64 \
            -p:BuildIpa=true \
            -p:ApplicationDisplayVersion=${{ steps.version.outputs.display }} \
            -p:ApplicationVersion=${{ steps.version.outputs.build }} \
            --no-restore

      - name: Upload app to TestFlight
        uses: apple-actions/upload-testflight-build@v1
        with:
          app-path: ${{ github.workspace }}/${{ inputs.project-folder }}/bin/${{ inputs.build-config }}/${{ inputs.dotnet-version-target }}-ios/ios-arm64/publish/${{ inputs.project-folder }}.ipa
          issuer-id: ${{ secrets.appstore-issuer }}
          api-key-id: ${{ secrets.appstore-keyid }}
          api-private-key: ${{ secrets.appstore-private-key }}

