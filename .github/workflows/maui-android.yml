name: NellsPay Android

on:
  workflow_call:
    inputs:
      dotnet-version:
        required: true
        type: string
      dotnet-version-target:
        required: true
        type: string
      project-file:
        required: true
        type: string
      project-folder:
        required: true
        type: string
      build-config:
        required: true
        type: string
      build-version:
        required: true
        type: string
    secrets:
      keystore:
        required: true
      keystore-alias:
        required: true
      keystore-password:
        required: true
      playstore-service-account:
        required: true

jobs:
  build-android:
    runs-on: windows-latest
    name: Android Publish
    environment: dev

    steps:
      # Checkout code
      - name: Checkout repository-=
        uses: actions/checkout@v3

      # Setup .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version:  9.0.x

      - name: Install MAUI Workload
        run: dotnet workload install maui --ignore-failed-sources
            
      - name: Restore Dependencies
        run: dotnet restore ${{ inputs.project-file }}
      - name: Debug keystore secret
        run: |
          if ([string]::IsNullOrEmpty("${{ secrets.keystore }}")) {
            Write-Output "❌ Keystore secret is EMPTY"
          } else {
            Write-Output "✅ Keystore secret exists (length: $($val.Length))"
          }
      # Decode Android keystore from Base64 secret
      - name: Decode Keystore
        id: decode_keystore
        uses: timheuer/base64-to-file@v1
        with:
            fileDir: '${{ github.workspace }}\${{ inputs.project-folder }}'
            fileName: 'ourkeystore.jks'
            encodedString: ${{ secrets.keystore }}

      - name: Version the app
        uses: managedcode/MAUIAppVersion@v1
        with: 
          csproj: ${{ inputs.project-file }}
          version: ${{ github.run_number }}
          displayVersion: ${{ inputs.build-version }}.${{ github.run_number }}

      - name: Generate MAUI Android AAB
        run: dotnet publish ${{inputs.project-file}} -c ${{ inputs.build-config }} -f ${{ inputs.dotnet-version-target }}-android /p:AndroidPackageFormats=aab /p:AndroidKeyStore=true /p:AndroidSigningKeyStore=${{steps.decode_keystore.outputs.filePath}} /p:AndroidSigningKeyAlias=${{secrets.keystore-alias}} /p:AndroidSigningKeyPass="${{ secrets.keystore-password }}" /p:AndroidSigningStorePass="${{ secrets.keystore-password }}" --no-restore

      # # Upload artifact for testing or distribution
      # - name: Upload APK/AAB Artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: android-app
      #     path: ./publish/*.apk  # change to *.aab if using App Bundle