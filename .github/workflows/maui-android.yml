name: NellsPay Android

on:
  workflow_call:
    inputs:
      dotnet-version:
        required: true
        type: string
      dotnet-version-target:
        required: true
        type: string
      project-file:
        required: true
        type: string
      project-folder:
        required: true
        type: string
      build-config:
        required: true
        type: string
    secrets:
      keystore:
        required: true
      keystore-alias:
        required: true
      keystore-password:
        required: true
      playstore-service-account:
        required: true

jobs:
  build-android:
    runs-on: windows-latest
    name: Android Publish
    environment: dev

    steps:
      # Checkout code
      - name: Checkout repository-=
        uses: actions/checkout@v3

      # Setup .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version:  9.0.x

      - name: Install MAUI Workload
        run: dotnet workload install maui --ignore-failed-sources
            
      - name: Restore Dependencies
        run: dotnet restore ${{ inputs.project-file }}
      - name: Debug keystore secret
        run: |
          if ([string]::IsNullOrEmpty("${{ secrets.keystore }}")) {
            Write-Output "❌ Keystore secret is EMPTY"
          } else {
            Write-Output "✅ Keystore secret exists (length: $($val.Length))"
          }
      # Decode Android keystore from Base64 secret
      - name: Decode Keystore
        id: decode_keystore
        uses: timheuer/base64-to-file@v1
        with:
            fileDir: '${{ github.workspace }}\${{ inputs.project-folder }}'
            fileName: 'ourkeystore.jks'
            encodedString: ${{ secrets.keystore }}

      - name: Read version from csproj
        id: version
        shell: pwsh
        run: |
          [xml]$csproj = Get-Content "${{ inputs.project-file }}"
          $display = ($csproj.Project.PropertyGroup | Where-Object { $_.ApplicationDisplayVersion } | Select-Object -First 1).ApplicationDisplayVersion
          $build   = ($csproj.Project.PropertyGroup | Where-Object { $_.ApplicationVersion }       | Select-Object -First 1).ApplicationVersion
          if (-not $display) { Write-Error "ApplicationDisplayVersion not found in csproj." }
          if (-not $build)   { Write-Error "ApplicationVersion not found in csproj." }
          "display=$display" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          "build=$build"     | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          Write-Host "Display Version: $display"
          Write-Host "Build Version:   $build"

      - name: Generate MAUI Android AAB
        shell: pwsh
        run: |
          dotnet publish `
          "${{ inputs.project-file }}" `
          -c "${{ inputs.build-config }}" `
          -f "${{ inputs.dotnet-version-target }}-android" `
          /p:AndroidPackageFormats=aab `
          /p:AndroidKeyStore=true `
          /p:AndroidSigningKeyStore="${{ steps.decode_keystore.outputs.filePath }}" `
          /p:AndroidSigningKeyAlias="${{ secrets.keystore-alias }}" `
          /p:AndroidSigningKeyPass="${{ secrets.keystore-password }}" `
          /p:AndroidSigningStorePass="${{ secrets.keystore-password }}" `
          /p:ApplicationDisplayVersion=${{ steps.version.outputs.display }} `
          /p:ApplicationVersion=${{ steps.version.outputs.build }} `
          --no-restore

      # Upload AAB artifact
      - name: Upload AAB Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-aab-${{ steps.version.outputs.display }}(${{ steps.version.outputs.build }})
          path: |
            **\bin\${{ inputs.build-config }}\${{ inputs.dotnet-version-target }}-android\publish\*.aab
            **\bin\${{ inputs.build-config }}\${{ inputs.dotnet-version-target }}-android\*.aab
          if-no-files-found: error
          retention-days: 7
          
      # Upload AAB to Google Play Console
      - uses: r0adkll/upload-google-play@v1.0.17
        name: Upload Android AAB to Play Console
        with:
          serviceAccountJsonPlainText: ${{ secrets.playstore-service-account }}
          packageName: ${{ inputs.package-name }}
          releaseFiles: ${{ github.workspace }}/${{ inputs.project-folder }}/bin/${{ inputs.build-config }}/${{ inputs.dotnet-version-target }}-android/publish/*.aab
          track: internal
          status: completed
